body {
    background: radial-gradient(circle, #999, #ddd);
}

.grid-item {
    border: 3px solid #000;
}

.grid-container {
    display: grid;
    grid-template-rows: repeat(3, 150px);
    grid-template-columns: 150px 150px 150px;
}

.grid-item:first-child {
    background: #0a0;
    grid-column: 1 / 3;
}

.grid-item:nth-child(2) {
    background: #00f;
    grid-row: 3/ 4;
    grid-column: 1/3;
}

.grid-item:nth-child(3) {
    background: #f00;
    grid-row: 1/ 4;
    grid-column: 3/4;
}

.grid-item:nth-child(4) {
    background: #ff0;
    grid-row: 2/ span 1;
    grid-column: 1/ span 2;
    /* (span)se encarga de decir cuantas columnas va abarcar el item, apartir del numero de  linea
    que esta indicado antes del slash oblicuo */
}

.grid-item:nth-child(5) {
    background: #aef;
    grid-row-start: 4;
    grid-row-end: 6;
    grid-column-start: 2;
    grid-column-end: 4;
    /* Start es el inicio de la grid-linea en la que va empezar a tomar el espacio ya sea en Column o Row */
    /* End es el Final de la grid-linea que va tomar de espacio ya sea en Grig-Column o Grid-Row */
}


/* Grid-Column Y Grid-row */


/* Estos son short-hand de las propiedades:
Related CSS properties: Grid-row: grid-row-start, grid-row-end.  Grid-column: grid-column-start, grid-column-end 
siven para agrandar un Grid item y decirle de que column-line quieres que empieze hasta que linea quieres que temine
y avarcara toda esa area, de igual forma se hace con las filas (Grid-row).*/